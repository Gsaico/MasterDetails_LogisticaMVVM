//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/07/08 - 22:06:40
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Dominio.Dtos;
using PersistenciaDatos;

namespace Dominio.Convertidores
{

    /// <summary>
    /// Assembler for <see cref="proyecto"/> and <see cref="proyectoDTO"/>.
    /// </summary>
    public static partial class proyectoAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="proyectoDTO"/> converted from <see cref="proyecto"/>.</param>
        static partial void OnDTO(this proyecto entity, proyectoDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="proyecto"/> converted from <see cref="proyectoDTO"/>.</param>
        static partial void OnEntity(this proyectoDTO dto, proyecto entity);

        /// <summary>
        /// Converts this instance of <see cref="proyectoDTO"/> to an instance of <see cref="proyecto"/>.
        /// </summary>
        /// <param name="dto"><see cref="proyectoDTO"/> to convert.</param>
        public static proyecto ToEntity(this proyectoDTO dto)
        {
            if (dto == null) return null;

            var entity = new proyecto();

            entity.ID_Proyecto = dto.ID_Proyecto;
            entity.ID_Usuario = dto.ID_Usuario;
            entity.year_ejec = dto.year_ejec;
            entity.nombre = dto.nombre;
            entity.estado = dto.estado;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="proyecto"/> to an instance of <see cref="proyectoDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="proyecto"/> to convert.</param>
        public static proyectoDTO ToDTO(this proyecto entity)
        {
            if (entity == null) return null;

            var dto = new proyectoDTO();

            dto.ID_Proyecto = entity.ID_Proyecto;
            dto.ID_Usuario = entity.ID_Usuario;
            dto.year_ejec = entity.year_ejec;
            dto.nombre = entity.nombre;
            dto.estado = entity.estado;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="proyectoDTO"/> to an instance of <see cref="proyecto"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<proyecto> ToEntities(this IEnumerable<proyectoDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="proyecto"/> to an instance of <see cref="proyectoDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<proyectoDTO> ToDTOs(this IEnumerable<proyecto> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
