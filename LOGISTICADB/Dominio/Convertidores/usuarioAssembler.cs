//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/07/08 - 22:06:41
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Dominio.Dtos;
using PersistenciaDatos;

namespace Dominio.Convertidores
{

    /// <summary>
    /// Assembler for <see cref="usuario"/> and <see cref="usuarioDTO"/>.
    /// </summary>
    public static partial class usuarioAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="usuarioDTO"/> converted from <see cref="usuario"/>.</param>
        static partial void OnDTO(this usuario entity, usuarioDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="usuario"/> converted from <see cref="usuarioDTO"/>.</param>
        static partial void OnEntity(this usuarioDTO dto, usuario entity);

        /// <summary>
        /// Converts this instance of <see cref="usuarioDTO"/> to an instance of <see cref="usuario"/>.
        /// </summary>
        /// <param name="dto"><see cref="usuarioDTO"/> to convert.</param>
        public static usuario ToEntity(this usuarioDTO dto)
        {
            if (dto == null) return null;

            var entity = new usuario();

            entity.ID_Usuario = dto.ID_Usuario;
            entity.ID_Departamento = dto.ID_Departamento;
            entity.DNI = dto.DNI;
            entity.password = dto.password;
            entity.nombres = dto.nombres;
            entity.apellidos = dto.apellidos;
            entity.fecha_nacimiento = dto.fecha_nacimiento;
            entity.email = dto.email;
            entity.celular = dto.celular;
            entity.estado = dto.estado;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="usuario"/> to an instance of <see cref="usuarioDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="usuario"/> to convert.</param>
        public static usuarioDTO ToDTO(this usuario entity)
        {
            if (entity == null) return null;

            var dto = new usuarioDTO();

            dto.ID_Usuario = entity.ID_Usuario;
            dto.ID_Departamento = entity.ID_Departamento;
            dto.DNI = entity.DNI;
            dto.password = entity.password;
            dto.nombres = entity.nombres;
            dto.apellidos = entity.apellidos;
            dto.fecha_nacimiento = entity.fecha_nacimiento;
            dto.email = entity.email;
            dto.celular = entity.celular;
            dto.estado = entity.estado;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="usuarioDTO"/> to an instance of <see cref="usuario"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<usuario> ToEntities(this IEnumerable<usuarioDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="usuario"/> to an instance of <see cref="usuarioDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<usuarioDTO> ToDTOs(this IEnumerable<usuario> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
