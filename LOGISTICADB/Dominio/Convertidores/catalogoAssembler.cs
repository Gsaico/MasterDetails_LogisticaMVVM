//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/07/08 - 22:06:39
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Dominio.Dtos;
using PersistenciaDatos;

namespace Dominio.Convertidores
{

    /// <summary>
    /// Assembler for <see cref="catalogo"/> and <see cref="catalogoDTO"/>.
    /// </summary>
    public static partial class catalogoAssembler
    {
        
        public static catalogo ToEntity(this catalogoDTO dto)
        {
            if (dto == null) return null;

            var entity = new catalogo();

            entity.ID_Catalogo = dto.ID_Catalogo;
            entity.tipo_bien = dto.tipo_bien;
            entity.unidad_medida = dto.unidad_medida;
            entity.nombre_bien = dto.nombre_bien;

            

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="catalogo"/> to an instance of <see cref="catalogoDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="catalogo"/> to convert.</param>
        public static catalogoDTO ToDTO(this catalogo entity)
        {
            if (entity == null) return null;

            var dto = new catalogoDTO();

            dto.ID_Catalogo = entity.ID_Catalogo;
            dto.tipo_bien = entity.tipo_bien;
            dto.unidad_medida = entity.unidad_medida;
            dto.nombre_bien = entity.nombre_bien;

           

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="catalogoDTO"/> to an instance of <see cref="catalogo"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<catalogo> ToEntities(this IEnumerable<catalogoDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="catalogo"/> to an instance of <see cref="catalogoDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<catalogoDTO> ToDTOs(this IEnumerable<catalogo> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }
        public static void Actualizar(Dominio.Dtos.catalogoDTO dto, PersistenciaDatos.catalogo entity)
        {
            entity.ID_Catalogo = dto.ID_Catalogo;
            entity.tipo_bien = dto.tipo_bien;
            entity.unidad_medida = dto.unidad_medida;
            entity.nombre_bien = dto.nombre_bien;

        }

    }
}
